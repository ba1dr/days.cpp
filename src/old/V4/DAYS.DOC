                 Программа для напоминания важных дат Days.


   *  Что это за программа?
   *  Отличия новой версии.
   *  Описание для использования
     - Структура файла с датами
     - Блок
     - Константа
     - Типы событий
       - переменные типа событий
     - События
     - #include - файлы
     - Параметры командной строки
   *  Ближайшие улучшения
   *  Автор

----------------------------------------------

    Иногда мы забываем некоторые даты, например, дни рождения, нужные встречи
  и некоторые праздники. Случается, что мы просыпаемся и вспоминаем : "Сегодня
  же день рождения такого-то !! А подарок не готов !!!".
    Чтобы быть готовым, необходимо записывать все мероприятия и даты и держать
  этот листок всегда на глазах. Однако, можно использовать для этого данную
  программу. Если включить ее в файл начальной загрузки autoexec.bat, то
  при каждом запуске компьютера Вы можете увидеть, какие праздники вас ожи-
  дают в ближайшие дни.

----------------------------------------------

  Эта программа - абсолютно новый вариант программы Days, которая, возможно,
  вам уже знакома. Отличия четвертой версии от предыдущих:
   -  программа переведена с Turbo Pascal на Borland C++
   -  более эффективные алгоритмы
   -  полностью изменена структура файла с датами
   -  возможность вложения(включения) файлов друг в друга
   -  появились более гибкие возможности для создания своих типов событий

----------------------------------------------

    Данное описание может показаться сложным для начинающего пользователя.
  Спешим уверить, что ничего НА САМОМ ДЕЛЕ сложного здесь нет, просто
  нужно понять основные принципы построения событий и их типов. Если же на
  это нет времени или желания, то достаточно использовать уже существующие
  типы событий, просто добавляя или заменяя свои события.

   Все данные о событиях должны храниться в текстовом файле, который
  имеет особую структуру. Весь файл представляет собой совокупность блоков,
  вложенных или следующих друг за другом. Блок - это любая последовательность
  символов, заключенная в фигурные скобки "{" - "}". Каждый файл (включая и
  вложенные) должен иметь свой главный блок. Вся информация, размещенная
  вне главного блока считается комментарием и не используется. Комментарии
  внутри блока начинаются со знака точки с запятой - ";" и продолжаются
  до конца строки. Некоторые блоки необязательны(например, блоки без
  заголовка, вложенные внутрь других), но способствуют более лучшей
  понятности размещения событий.
    Программа различает регистр всех служебных символов. Это значит,
  что имена, например, констант "constant" и "COnStaNt" - различны!
    Поддерживаются определения констант. Константы можно определить с
  помощью ключевого слова "#define", после которого должно идти имя
  константы, а после знака равенства - "=" - значение. Данные константы
  являются глобальными и могут быть использованы в любом месте, в том числе
  и во вложенных файлах и даже ДО своего определения. Нельзя переопределить
  значение константы, хотя и не запрещается определять несколько констант
  с одним именем (будет использована только первая). Константы можно
  использовать в любом месте программы (кроме определения других констант),
  подставив ее имя, заключенное в знаки доллара "$" с обеих сторон.
    Так, если мы определили константу как:
    #define constant=123abc
  то можно использовать ее далее, как $constant$ - на ее место будет
  подставлено ее значение (123abc). В значении константы можно использовать
  любые текстовые символы (учтите, что знак ";" - означает дальнейший
  комментарий!). Существуют также несколько стандартных констант, которые Вы
  можете использовать:
   $BDEFAULT$ - используется для указания, что этот тип событий может
      выводиться за количество дней, принятое по умолчанию (чаще всего - 3).
   $CDEFAULT$ - цвет символов по умолчанию (серый - 7).
   $BKCDEFAULT$ - цвет фона по умолчанию (черный - 0).
   $DAYSVERSION$ - текущая версия программы (v4.00 - и выше).

    Основу всего составляют типы событий и события.
    О событиях скажем пока лишь то, что они могут быть какого-либо типа.
    Тип события - это блок со следующим заголовком:
       #defeventtype имя_типа                 , например:
       #defeventtype TBIRTHDAY
  где "#defeventtype" - ключевое слово, показывающее, что мы определяем
  тип события, а "имя_типа" - любое имя для него. Далее, через любое коли-
  чество пустых строк (в том числе и строк-комментариев) должна идти откры-
  вающая фигурная скобка "{". Если это будет другой символ, данное событие
  будет считаться сразу же закрытым и значения его переменных не определено.
    Все события одного типа имеют одинаковые параметры вывода - цвет, фон,
  звуковое сопровождение, формат вывода, и, если специально не указано,
  количество дней до вывода. Все они определяются внутри типа и являются
  локальными, то есть не могут быть использованы другими типами. Определить
  переменную можно следующим образом:
       &имя_переменной=значение
  Здесь знак амперсанда "&" является указанием, что мы определяем переменную,
  "имя_переменной" может быть одним из стандартных или любым другим. Значение
  зависит от того, что это за переменная (текстовая или цифровая). Переменные
  можно использовать внутри определения типа или события этого типа, заключив
  ее имя в знаки "собачка" - "@". То есть переменная, определенная как
       &days_in_year=365
  может быть использована как @days_in_year@ и вместо нее будет подставлено
  ее значение (365).
  Стандартные же переменные следующие:
      @color@ - указывает цвет текста для вывода [0-15].
      @bkcolor@ - цвет фона [0-7].
      @before@ - за сколько дней выводить данные события [0-365 :) ].
      @format@ - формат вывода события. О нем подробнее - далее [текстовый].
      @evntdate@ - эту переменную менять нельзя. Она пересчитывается для
         каждого события программой. Содержит текстовое представление даты
         для вывода.
      @evntwhen@ - также переопределяется программой. Содержит текст, в
         котором указано количество дней до события.
      @evntstr@ - текст, содержащий само событие. Переопределяется каждый
         раз.

    Любые определенные пользователем другие переменные могут быть подставлены
  в переменную @format@.
    Переменная @format@ служит для представления данных для вывода. В ней
  могут содержаться как текст (в кавычках - " ), так и переменные.
  То есть, например для типа со следующей переменной @format@ :

  &format=@evntdate@", "@evntwhen@", День рождения "@evntstr@" - поздравить!"

  будут при выводе подставлены значения: даты события(например, "5 ИЮЛЯ"),
  затем - запятая и пробел, время до события (например, "ПОСЛЕЗАВТРА"),
  далее - запятая, пробел, текст "День рождения", пробел, строка события
  (вроде "Иван Иваныча"), далее - текст " - поздравить!". Причем, это будет
  выведено цветом типа и с цветом фона типа:
    5 ИЮЛЯ, ПОСЛЕЗАВТРА, День рождения Иван Иваныча - поздравить!
    Каждая из включенных переменных может отсутствовать или идти в другом
  порядке.
  Тип события закрывается фигурной скобкой блока - "}".

    Событие - это текст, выводящийся определенного числа или за несколько
  дней до него. События определяются в своих блоках. Заголовок блока
  следующий: после ключевого слова "#event" идет имя типа, к которому
  будет принадлежать событие, а далее - имя самого блока(любое):
    #event TBIRTHDAY Birthday
    Далее, как и в описании типа события, открывается блок события. Он
  состоит из строк событий, имеющих определенный формат. Сначала должна
  идти дата события в скобках "(" - ")" (или хотя бы сами скобки). Далее,
  в кавычках  "" - текст события(как раз, переменная @evntstr@). Если
  не указана дата (то есть - пустые скобки), или вместо числа и месяца
  стоят нули, то данное событие будет выводиться каждый раз при запуске.
  Если же "0" - только один из чисел даты (день или месяц), а другой - не
  "0", то событие выводится каждое число месяца (если "0" - число) или
  каждый месяц этого числа ("0" - месяц). День и месяц могут разделяться
  пробелом или запятой. Если после даты в скобках стоит число, то оно
  считается числом дней, за сколько выводить это событие. Так, событие
    (5 7, 4) "Иван Иваныча"
  в блоке из предыдущего примера будет выводиться за четыре дня до 5 июля и
  четыре дня после него (если это не запрещено опцией /NV).
    Здесь сразу нужно пояснить, для чего выводятся даты уже прошедших
  праздников. Допустим, Вы используете компьютер не каждый день, и запустив,
  например, его через три дня, Вы обнаруживаете, что:
    5 ИЮЛЯ, ВЧЕРА, День рождения Иван Иваныча - поздравить!
  А сегодня-то уже 6 июля! Но можно еще успеть поздравить. Лучше поздно,
  чем никогда! Впрочем, это легко отключается через командную строку
  программы (см. далее).
    В этой версии программы появилась возможность включать дополнительные
  файлы внутрь друг друга. То есть, если в программе есть строка:
     #include file1.txd
  текст файла file1.txd будет вставлен при чтении так, если бы его содер-
  жимое находилось в первичном файле. В свою очередь сам включенный файл может
  включать любое количество других файлов (но если файлы включают друг друга
  взаимно, программа "зациклится" - это остается на совести пользователя!).
    [В данной программе использован улучшенный алгоритм включения файлов, так,
  что "проблема открытых файлов", знакомая любому программисту под DOS (когда
  нельзя использовать больше определенного числа открытых файлов) отсутствует.
  Это достигается тем, что файл закрывается перед чтением очередного файла и
  опять открывается после, что позволяет использовать большее их число
  (однако, процедура их чтения - рекурсивна и при большом количестве файлов
  может произойти переполнение стека).]
    Каждый #include - файл должен иметь свой главный блок, как и первичный
  файл, то есть, весь текст до главного блока файла - является комментарием.

    Программа имеет несколько управляющих параметров, которые можно
  передавать при запуске в командной строке:
    /?       -  Вывод справки о параметрах.
    /NM      -  Отключение музыки(в следующих версиях)
    /D<n>    -  За сколько дней предупреждать о событиях (по умолчанию - 3)
    /P<n>    -  Длительность паузы (усл. величин - зависит от числа событий)
    \<path>  -  Путь к файлу с датами(если нет имени файла, то days.txd)
    /S       -  Запускать Программу не более 1 раза в сутки
    /NV      -  Не выводить прошедшие праздники

----------------------------------------------

   К сожалению, не удалось успеть воплотить в программе все идеи, которые
  я намеревался использовать. Но в ближайших версиях программы ожидайте:
    -  Использование звуковых событий.
    -  Подсчет возраста, например, для дней рождений.
    -  Условия на переменные.
    -  Расширенная конкатенация строк.
    -  простейшие арифметические и логические опреации.
    -  а также все Ваши пожелания, которые Вы можете мне передать.

----------------------------------------------

    Программа написана на языке программирования Borland C++ v3.1 и запре-
  щается изменять или дизассемблировать ее.

    Эта серия программ от "Company 'Do'" предназначена исключительно для
  ОС (операционной системы) DOS. Данное предпочтение автора принципиально
  и недовольным просьба не обращаться.

    Программа распространяется бесплатно и по принципу "as is", не
  возбраняется переписывать ее другим пользователям независимо от их желания.


                                                    Колянов Алексей
                                                     Company "Do"
                                                      27.05.2001

                                               e-mail:baldr@uic.nnov.ru

   P.S. Пишите, пожалуйста, о всех найденных ошибках и просто пожеланиях.




